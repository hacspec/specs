(* File automatically generated by Hacspec *)
From Hacspec Require Import Hacspec_Lib MachineIntegers.
From Coq Require Import ZArith.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.

Inductive t_AuctionState: Type :=
| AuctionState_NotSoldYet : t_AuctionState
| AuctionState_Sold : t_AccountAddress_t -> t_AuctionState.

Inductive t_BidError: Type :=
| BidError_ContractSender : t_BidError
| BidError_BidTooLow : t_BidError
| BidError_BidsOverWaitingForAuctionFinalization : t_BidError
| BidError_AuctionFinalized : t_BidError.

Inductive t_FinalizeError: Type :=
| FinalizeError_BidMapError : t_FinalizeError
| FinalizeError_AuctionStillActive : t_FinalizeError
| FinalizeError_AuctionFinalized : t_FinalizeError.

(*Not implemented yet? todo(item)*)

(*Not implemented yet? todo(item)*)

Definition auction_init (_ : unit) : t_Never_t :=
  failure (AST import) Fatal error: something we considered as impossible occurred! Please report this by submitting an issue on GitHub!
Details: [import_thir:literal] got an error literal: this means the Rust compiler or Hax's frontend probably reported errors above.
 { Types.attributes = [];
  contents =
  Types.Literal {
    lit =
    { Types.node = Types.Err;
      span =
      { Types.filename =
        (Types.Real (Types.LocalPath "auction/src/auction.rs"));
        hi = { Types.col = "0"; line = "1" };
        lo = { Types.col = "0"; line = "1" } }
      };
    neg = false};
  hir_id = None;
  span =
  { Types.filename = (Types.Real (Types.LocalPath "auction/src/auction.rs"));
    hi = { Types.col = "63"; line = "115" };
    lo = { Types.col = "0"; line = "115" } };
  ty = Types.Never }.

Record t_InitParameter : Type :={
  f_item : t_Vec_t (int8) (t_Global_t);
  f_expiry : t_Timestamp_t;
}.

Record t_State : Type :={
  f_auction_state : t_AuctionState_t;
  f_highest_bid : t_Amount_t;
  f_item : t_Vec_t (int8) (t_Global_t);
  f_expiry : t_Timestamp_t;
  f_bids : t_BTreeMap_t (t_AccountAddress_t) (t_Amount_t) (t_Global_t);
}.

Definition fresh_state (itm : t_Vec_t (int8) (t_Global_t)) (exp : t_Timestamp_t) : t_State_t :=
  Build_State (f_auction_state := AuctionState_NotSoldYett_AuctionState_t) (f_highest_bid := impl__Amount__zero tt) (f_item := itm) (f_expiry := exp) (f_bids := impl_18__new tt).
